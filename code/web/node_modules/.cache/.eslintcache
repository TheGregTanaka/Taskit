[{"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/index.js":"1","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/reportWebVitals.js":"2","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/App/App.js":"3","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CreateTask/CreateTask.js":"4","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Chat/Chat.js":"5","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Dashboard/Dashboard.js":"6","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Login/Login.js":"7","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Navbar/Navbar.js":"8","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Registration/Registration.js":"9","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CreateReview/CreateReview.js":"10","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/ViewProfile/ViewProfile.js":"11","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Transaction/Transaction.js":"12","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Feed/Feed.js":"13","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Workspace/Workspace.js":"14","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Atoms/Tasks.js":"15","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Workspace/AcceptedTasks.js":"16","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CompanyProfile/CompanyProfile.js":"17","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/DetailedTask.js":"18","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Review/Review.js":"19","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/StarRating/StarRating.js":"20","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/EnlargeTask.js":"21","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/MinimizedTask.js":"22"},{"size":516,"mtime":1613518444359,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1613518444360,"results":"25","hashOfConfig":"24"},{"size":2855,"mtime":1616875235681,"results":"26","hashOfConfig":"24"},{"size":4064,"mtime":1616865439136,"results":"27","hashOfConfig":"24"},{"size":8480,"mtime":1616865439136,"results":"28","hashOfConfig":"24"},{"size":261,"mtime":1616874377817,"results":"29","hashOfConfig":"24"},{"size":3620,"mtime":1616865743412,"results":"30","hashOfConfig":"24"},{"size":2299,"mtime":1616874870302,"results":"31","hashOfConfig":"24"},{"size":4014,"mtime":1615323515673,"results":"32","hashOfConfig":"24"},{"size":2833,"mtime":1616865439142,"results":"33","hashOfConfig":"24"},{"size":2628,"mtime":1616865439138,"results":"34","hashOfConfig":"24"},{"size":146,"mtime":1616828405020,"results":"35","hashOfConfig":"24"},{"size":595,"mtime":1616865743412,"results":"36","hashOfConfig":"24"},{"size":1474,"mtime":1616865439138,"results":"37","hashOfConfig":"24"},{"size":1846,"mtime":1616865439135,"results":"38","hashOfConfig":"24"},{"size":2046,"mtime":1616865439138,"results":"39","hashOfConfig":"24"},{"size":3826,"mtime":1616865439136,"results":"40","hashOfConfig":"24"},{"size":2645,"mtime":1616865439137,"results":"41","hashOfConfig":"24"},{"size":1541,"mtime":1616865439137,"results":"42","hashOfConfig":"24"},{"size":566,"mtime":1615323515674,"results":"43","hashOfConfig":"24"},{"size":853,"mtime":1616865439137,"results":"44","hashOfConfig":"24"},{"size":2111,"mtime":1616865439137,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"uzkvsu",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/index.js",[],["99","100"],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/reportWebVitals.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/App/App.js",["101","102","103"],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CreateTask/CreateTask.js",["104"],"import axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Modal from 'react-modal';\nimport { useState } from 'react'\n\nconst customStyles = {\n    overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(56, 56, 56, 0.95)'\n    },\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      marginTop: '2%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n    }\n};\n\nfunction CreateTask (){\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    const [task, setTask] = useState({\n        typeID: 1, // temp\n        taskerID: 1, // temp\n        workerID: 1, // temp\n        dateCompleted: \"\", // temp\n        rating: 0, // temp\n\n        title: \"\",\n        offeredPrice: 0,\n        description: \"\",\n        statusID: 1,\n        \n        negotiable: 0,\n        \n        img: \"\",\n        remotePossible: 0,\n    });\n    \n     // Create Task Modal\n     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n     const setModalIsOpenToTrue =()=>{ setModalIsOpen(true); }\n     const setModalIsOpenToFalse =()=>{ setModalIsOpen(false); }\n\n    const handleSubmit = e => { \n        e.preventDefault();\n        setModalIsOpenToFalse();\n        \n        axios.post('http://localhost:3200/task', { task })\n            .then((response) => { \n                console.log(response.data);\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n   \n\n    return(\n        <>\n            <Button variant=\"contained\" color=\"inherit\" onClick={setModalIsOpenToTrue}>Create Task</Button>\n            <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={()=> setModalIsOpenToFalse} scrollable={true}>\n                <center>\n                    <h5>Create a Task</h5>\n                </center>\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <label>\n                            Task name: \n                            <input type=\"text\" name=\"task_name\" value={task.title} onChange={e => setTask({ ...task, title: e.target.value })}/>\n                        </label>\n                        <label>\n                            Price:\n                            <input type=\"number\" name=\"task_price\" placeholder=\"USD\" value={task.offeredPrice} onChange={e => setTask({ ...task, offeredPrice: e.target.value })}/>\n                        </label>\n                        <label>\n                            Description: \n                            <br/>\n                            <textarea id=\"task_desc\" maxLength=\"1200\" style={{width:\"100%\", height:\"150px\"}} placeholder={\"I will\"}\n                                value={task.description} onChange={e => setTask({ ...task, description: e.target.value })}/>\n                        </label>\n                        <label>\n                            Location: \n                            <input type=\"text\" name=\"task_loc\"/>\n                        </label>\n                        <label>\n                            Deadline: \n                            <input type=\"date\" name=\"task_deadline\" value={task.dateCompleted} onChange={e => setTask({ ...task, dateCompleted: e.target.value })}/>\n                        </label>\n                        <label>\n                            Image:\n                            <br/>\n                            <input type=\"file\" name=\"task_img\" accept=\"image/*\"></input>\n                        </label>\n                        <Button type=\"submit\" variant=\"contained\" color='inherit' style={{float:\"right\", margin:\"1% 1% 1% 1%\"}}>Submit</Button>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={setModalIsOpenToFalse} style={{float:\"right\", margin:\"1% 1% 1% 1%\"}}>Cancel</Button>\n                    </form>\n                </div>\n            </Modal>\n        </>\n    )\n}\nexport default CreateTask;","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Chat/Chat.js",["105"],"import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport Button from \"@material-ui/core/Button\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport './style.css';\n\nconst customStyles = {\n    overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(56, 56, 56, 0.95)'\n    },\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n    }\n};\n\nconst friends = [\n    {\n        key: 1,\n        name: \"1. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/1.jpg\"\n    },\n    {\n        key: 2,\n        name: \"2. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/2.jpg\"\n    },\n    {\n        key: 3,\n        name: \"3. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/3.jpg\"\n    },{\n        key: 4,\n        name: \"4. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/4.jpg\"\n    },\n    {\n        key: 5,\n        name: \"5. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/5.jpg\"\n    },\n    {\n        key: 6,\n        name: \"6. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/6.jpg\"\n    },\n    {\n        key: 7,\n        name: \"7. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/7.jpg\"\n    },\n    {\n        key: 8,\n        name: \"7. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/7.jpg\"\n    },\n    {\n        key: 9,\n        name: \"7. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/7.jpg\"\n    },\n    {\n        key: 10,\n        name: \"7. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/7.jpg\"\n    },\n    {\n        key: 11,\n        name: \"7. Firstname Lastname\",\n        img: \"https://material-ui.com/static/images/avatar/7.jpg\"\n    },\n];\n\nconst Chat = () => {\n    const [modalIsOpen,setModalIsOpen] = useState(false);\n    const setModalIsOpenToTrue =()=>{\n        setModalIsOpen(true)\n    }\n    const setModalIsOpenToFalse =()=>{\n        setModalIsOpen(false);\n    }\n    return (\n        <>\n            <Button size=\"small\" color=\"primary\" onClick={setModalIsOpenToTrue}>\n                <Typography style={{color:\"#ffab40\"}}>Message</Typography>\n            </Button>\n            <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={()=> setModalIsOpen(false)}>\n                <div style={{ width:\"75vw\", height:\"100%\"}}>\n                    <Grid container>\n                        <Grid item xs={3} component={Paper}>\n                            <List>\n                                <ListItem>\n                                    <ListItemIcon>\n                                        <Avatar alt=\"user_pic\" src=\"https://material-ui.com/static/images/avatar/8.jpg\" />\n                                    </ListItemIcon>\n                                    <ListItemText id=\"drop-labels\" primary={<Typography variant=\"h5\">Chats</Typography>}></ListItemText>\n                                </ListItem>\n                            </List>\n\n                            <Divider />\n                            \n                            <Grid item id=\"drop-labels\">\n                                <br/>   \n                                <TextField label=\"Search\" variant=\"outlined\" type=\"\" fullWidth/>\n                            </Grid>\n\n                            <List id=\"friendList\">\n                                <Box style={{maxHeight: '50vh', overflow: 'auto'}}>\n                                    {friends.map(friend => (\n                                        <ListItem button key={friend.key}>\n                                            <ListItemIcon>\n                                                <Avatar alt=\"user_pic\" src={friend.img} />\n                                            </ListItemIcon>\n                                            <ListItemText id=\"drop-labels\" style={{'overflowWrap': 'break-word'}} primary={friend.name}/>\n                                        </ListItem>\n                                    ))}\n                                </Box>\n                                \n                            </List>\n                        </Grid>\n                        <Grid item xs={9} component={Paper}>\n                            <List>\n                                <ListItem>\n                                    <ListItemIcon>\n                                        <Avatar alt=\"user_pic\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"1. Firstname Lastname\"></ListItemText>\n                                    <Button size=\"large\" color=\"primary\" class=\"fa fa-times\" style={{float:\"right\", border:\"0\", backgroundColor:\"white\", fontSize:\"20px\"}} onClick={setModalIsOpenToFalse}/>\n                                </ListItem>\n                            </List>\n\n                            <Divider/>\n                            <Box style={{maxHeight: '53vh', overflow: 'auto', maxWidth:'auto', height:\"53vh\"}}>\n                                <List>\n                                    <ListItem key=\"1\">\n                                        <div style={{marginLeft:\"auto\"}}> \n                                            <Grid item>\n                                                <ListItemText align=\"right\" style={{'overflowWrap': 'break-word', padding:\"10px\", backgroundColor:\"#00B2FF\", borderRadius:\"20px\", maxWidth:\"50vw\"}} \n                                                    primary={<Typography type=\"body2\" style={{ color: 'white' }}>Main User</Typography>}></ListItemText>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <ListItemText align=\"right\" secondary=\"09:30\"></ListItemText>\n                                            </Grid>\n                                        </div>\n                                    </ListItem>\n\n                                    <ListItem key=\"2\">\n                                        <Grid container>\n                                            <Grid item>\n                                                <ListItemText align=\"left\" style={{'overflowWrap': 'break-word', padding:\"10px\", backgroundColor:\"#E8E8E8\", borderRadius:\"20px\", maxWidth:\"50vw\"}} primary=\"Other User Response\"></ListItemText>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <ListItemText align=\"left\" secondary=\"09:31\"></ListItemText>\n                                            </Grid>\n                                        </Grid>\n                                    </ListItem>\n                                </List>\n                            </Box>\n\n                            <Divider />\n                            <Box component={Paper}>\n                                <div className=\"row \"style={{padding:\"1px\"}}>\n                                    <div className=\"col s12 valign-wrapper\" style={{display:\"flex\", flexDirection:\"right\"}}>\n                                        <TextField label=\"Send Message\" variant=\"outlined\" type=\"\" fullWidth/>\n                                        <Button className=\"center-align\"><SendIcon /></Button>\n                                    </div>\n                                </div>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nexport default Chat","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Dashboard/Dashboard.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Login/Login.js",["106","107","108","109"],"import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nimport './Login.css';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nasync function loginUser(credentials) {\n  console.log(credentials);\n  //TODO put api in env var\n  const api = \"http://localhost:3200\";\n  axios.post(api + '/login', {\n    email: credentials.email,\n    password: credentials.password\n  })\n  .then(function (res) {\n    console.log(res);\n  })\n  .catch(function (err) {\n    console.log(err);\n  });\n      \n  let json = {\n    \"token\": \"aoeuhjkl\"\n  };\n  return json;\n}\n\nexport default function Login({ setToken, loggedIn }) {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const classes = useStyles();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({email, password});\n    setToken(token);\n  }\n  if (loggedIn) {\n    return (<Redirect to=\"/dashboard\" />);\n  } else {\n    return (\n<Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor: \"white\", marginCenter:'3%'}} >\n<CssBaseline />\n<div className={classes.paper}>\n<Typography variant=\"h5\" color=\"textPrimary\"> Sign In with your TaskIT Credentials</Typography>\n  <form className={classes.form} noValidate onSubmit={handleSubmit}>\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n      </Grid>\n    </Grid>\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      /*className={classes.submit}*/\n    >\n    <Typography color='#ffffff'>SUBMIT</Typography>\n    </Button>\n    <Grid container justify=\"flex-end\">\n      <Grid item>\n      </Grid>\n    </Grid>\n  </form>\n</div>\n<Box mt={5}>\n</Box>\n</Container>\n);  \n  }\n}\n\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Navbar/Navbar.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Registration/Registration.js",["110","111","112"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Registration() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor: \"white\", marginCenter:'3%'}} >\n      <CssBaseline />\n      <div className={classes.paper}>\n      <Typography variant=\"h5\" color=\"textPrimary\"> Join the Commuinty for Free</Typography>\n      {/*<Avatar alt=\"TaskIT\" src=\"/Users/ManojYeddanapudy/sign_up/Taskit.jpg\" className={classes.large} />*/}\n        <form className={classes.form} noValidate >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"phone number\"\n                label=\"Phone number\"\n                type=\"phone number\"\n                id=\"phone number\"\n                autoComplete=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            /*className={classes.submit}*/\n          >\n            Register\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n      </Box>\n    </Container>\n  );\n}","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CreateReview/CreateReview.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/ViewProfile/ViewProfile.js",["113","114","115","116","117","118"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './ViewProfile.css';\nimport profile_imag from '../../image/img_profile.png';\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n\nconst ViewProfile = ({login}) => {\n    const [profile, setProfile] = useState([]);\n    const [err, setErr] = useState(false);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:3200/task\") //url from node js server (get & post request)\n            .then((response) => {\n                setProfile(response.data); //response.data is data from request\n                setErr(false);\n                console.log(\"Tasks Res: \", response.data);\n            })\n            .catch(err => {\n                setErr(true);\n                console.log(err);\n            });\n    }, []);\n    return (\n        <div>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                        <div class=\"card\">\n                            <img class=\"card-img-top\" src={profile_imag} width=\"300\"></img>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-8\">\n                        <div class=\"table\">\n                            <tr>\n                                <th>\n                                    Name:\n                                </th>\n                                <td>\n                                    John Sullivan\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>\n                                    Bio:\n                                </th>\n                                <td>\n                                    John Sullivan is a Human Resources specialist with a decade of successful experience in hiring and employee management. John specializes in Human Resource technologies and regularly attends national training sessions to showcase new HR tech trends, such as self-service, wellness apps, and people analytics tools. A strong believer in the power of positive thinking in the workplace, John regularly develops internal wellness campaigns to assist employees with effective mental health techniques. John enjoys a good Netflix binge but can also be found on long bike rides on hilly country roads.\n                                </td>\n                            </tr>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewProfile","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Transaction/Transaction.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Feed/Feed.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Workspace/Workspace.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Atoms/Tasks.js",["119","120"],"import React, { Component } from \"react\";\nimport \"../App/App.css\";\n\nimport core, { Card, CardActionArea } from \"@material-ui/core\";\n\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport imag from '../../image/car_wash.jpeg';\n\nclass Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: 400,\n      height: 300,\n    };\n  }\n\n  render() {\n    const { img, name, price, description, location, deadline } = this.props;\n    return (\n      <Card style={{ width: 300 }}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image={img}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"left\">\n              {name} - <b>${price}</b>\n            </Typography>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\" align=\"left\">\n              {location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              align=\"left\"\n            >\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" variant=\"outlined\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nTask.defaultProps = {\n  img: imag,\n  name: 'default title',\n  price: 'default price', \n  description: 'default description',\n  location: 'default location',\n  deadline: 'deadline'\n}\nexport default Task;\n","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Workspace/AcceptedTasks.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/CompanyProfile/CompanyProfile.js",["121"],"import './style.css'\nimport img_profile from '../../image/img_profile.png'\n\n// import Feed from '../Feed/Feed'  // Dummy feed\nimport Tasks from '../Atoms/Tasks'\n\nimport StarRating from '../StarRating/StarRating'\nimport Review from '../Review/Review'\nimport Chat from '../Chat/Chat';\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst company = [\n    {\n        name: 'Taskit',\n        rating: 3.5,\n        location: 'Boulder, CO',\n        bio: 'At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.',\n    }\n]\n\nconst CompanyProfile = () => {\n    const [reviews, setReviews] = useState([]);\n    const [tasks, setTasks] = useState([]);\n    const [err, setErr] = useState(false);\n\n    useEffect(() => {\n        axios.all([\n            axios.get(\"http://localhost:3200/review\"),\n            axios.get(\"http://localhost:3200/task\")\n        ])\n        .then(axios.spread((reviewRes, taskRes) => {\n            setReviews(reviewRes.data);\n            setTasks(taskRes.data);\n            setErr(false);\n\n            console.log(\"Reviews Res: \", reviewRes.data);\n            console.log(\"Tasks Res: \", taskRes.data);\n        }))\n        .catch(err => {\n            setErr(true);\n            console.log(err);\n        });\n    }, []);\n\n    return (\n        <div style={{margin: \"2% 1% 5% 5%\"}}>\n            <div className=\"row\">\n                <div className=\"col l2 white accent-3\">\n                    <div className=\"card bio\">\n                        <img className=\"circle img-profile-responsive\" src={img_profile} alt=\"Profile Image\"/>\n                        \n                        <div className=\"card-content\">\n                            <center>\n                                <span className=\"card-title\">{company[0].name}</span>\n                                \n                                {/* The rating should be done in the backend specifically the stars should be created else change the class with unique id*/}\n                                <StarRating value={company[0].rating}/>\n                            </center>\n                            <i className=\"fa fa-map-marker\" style={{color: \"black\", marginRight:'3%'}}></i>\n                            <span id='location'>{company[0].location}</span>\n\n                            <br/><br/>\n                            <p id='bio'>{company[0].bio}</p>\n                        </div>\n\n                        <div className=\"card-action\">\n                            <Chat />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col l10 fit-in-container\" style={{backgroundColor: 'white'}}>\n                    <div className=\"row\" style={{marginTop:'1%'}}>\n                        {!err && tasks.map((task) => (<div className=\"col\"><Tasks img={task.img} name={task.title} price={task.offeredPrice} \n                                                                description={task.description} location={task.location}\n                                                                deadline={task.datePosted}/></div> ))}\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        {!err && reviews.map((review) => (<Review key={review.key} username={review.username} description={review.description} ratingVal={review.rating} img={review.img}/>))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nCompanyProfile.defaultProps = {\n    username: 'Firstname Lastname',\n    location: 'location',\n}\n\nexport default CompanyProfile\n","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/DetailedTask.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/Review/Review.js",["122"],"import StarRating from '../StarRating/StarRating'\nimport img_profile from '../../image/img_profile.png'\nimport './style.css'\n\nconst Review = ({username, description, ratingVal, img}) => {\n    return (\n        <div className='review_box card-panel'>\n            <div className='row' style={{marginBottom:'0'}}>\n                <div className='col s5 m3'>\n                    <div className='row'>\n                        <div className='col tasker_img_div'>\n                            <img className=\"circle reviewer-profile-img\" src={img} alt=\"Profile Image\"/>\n                        </div>\n                        <div className='col'>\n                            <span className=\"name\"><b>{username}</b></span>\n                            <div style={{fontSize:'75%'}}>\n                                <StarRating value={ratingVal}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col s7 m9 review_desc'>\n                    <p>{description}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nReview.defaultProps = {\n    username: 'Firstname Lastname',\n    img: img_profile,\n    description: \"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga.\",\n}\n\n\nexport default Review\n","/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/StarRating/StarRating.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/EnlargeTask.js",[],"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/web/src/components/DetailedTask/MinimizedTask.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"131","line":41,"column":9,"nodeType":"129","messageId":"130","endLine":41,"endColumn":15},{"ruleId":"127","severity":1,"message":"132","line":42,"column":12,"nodeType":"129","messageId":"130","endLine":42,"endColumn":16},{"ruleId":"127","severity":1,"message":"133","line":29,"column":9,"nodeType":"129","messageId":"130","endLine":29,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"134","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":24},{"ruleId":"127","severity":1,"message":"135","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":16},{"ruleId":"127","severity":1,"message":"136","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"137","line":13,"column":8,"nodeType":"129","messageId":"130","endLine":13,"endColumn":14},{"ruleId":"127","severity":1,"message":"134","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":24},{"ruleId":"127","severity":1,"message":"135","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":14},{"ruleId":"127","severity":1,"message":"138","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":23},{"ruleId":"127","severity":1,"message":"139","line":1,"column":25,"nodeType":"129","messageId":"130","endLine":1,"endColumn":30},{"ruleId":"127","severity":1,"message":"140","line":1,"column":32,"nodeType":"129","messageId":"130","endLine":1,"endColumn":38},{"ruleId":"127","severity":1,"message":"141","line":12,"column":12,"nodeType":"129","messageId":"130","endLine":12,"endColumn":19},{"ruleId":"127","severity":1,"message":"142","line":13,"column":12,"nodeType":"129","messageId":"130","endLine":13,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":33,"column":29,"nodeType":"145","endLine":33,"endColumn":86},{"ruleId":"127","severity":1,"message":"146","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":12},{"ruleId":"127","severity":1,"message":"147","line":24,"column":54,"nodeType":"129","messageId":"130","endLine":24,"endColumn":62},{"ruleId":"148","severity":1,"message":"149","line":52,"column":25,"nodeType":"145","endLine":52,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":12,"column":29,"nodeType":"145","endLine":12,"endColumn":105},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getJwt' is assigned a value but never used.","'data' is assigned a value but never used.","'date' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Avatar' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'profile' is assigned a value but never used.","'err' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'core' is defined but never used.","'deadline' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]