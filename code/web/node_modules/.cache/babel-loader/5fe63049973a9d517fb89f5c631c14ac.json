{"ast":null,"code":"var _jsxFileName = \"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/CreateTask/CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(56, 56, 56, 0.95)'\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    marginTop: '2%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'white'\n  }\n};\n\nfunction CreateTask() {\n  _s();\n\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  const [task, setTask] = useState({\n    typeID: 1,\n    // temp\n    taskerID: 1,\n    // temp\n    workerID: 1,\n    // temp\n    dateCompleted: \"\",\n    // temp\n    rating: 0,\n    // temp\n    title: \"\",\n    offeredPrice: 0,\n    description: \"\",\n    statusID: 1,\n    negotiable: 0,\n    img: \"\",\n    remotePossible: 0\n  }); // Create Task Modal\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setModalIsOpenToFalse();\n    axios.post('http://localhost:3200/task', {\n      task\n    }).then(response => {\n      console.log(response.data);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"inherit\",\n      onClick: setModalIsOpenToTrue,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      style: customStyles,\n      onRequestClose: () => setModalIsOpenToFalse,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Create a Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Task name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"task_name\",\n              value: task.title,\n              onChange: e => setTask({ ...task,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"task_price\",\n              placeholder: \"USD\",\n              value: task.offeredPrice,\n              onChange: e => setTask({ ...task,\n                offeredPrice: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"task_desc\",\n              maxLength: \"1200\",\n              style: {\n                width: \"100%\",\n                height: \"150px\"\n              },\n              placeholder: \"I will\",\n              value: task.description,\n              onChange: e => setTask({ ...task,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Location:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"task_loc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"task_deadline\",\n              value: task.dateCompleted,\n              onChange: e => setTask({ ...task,\n                dateCompleted: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Image:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"task_img\",\n              accept: \"image/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"inherit\",\n            style: {\n              float: \"right\",\n              margin: \"1% 1% 1% 1%\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: setModalIsOpenToFalse,\n            style: {\n              float: \"right\",\n              margin: \"1% 1% 1% 1%\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateTask, \"G+vDPyq8U2bjbwOByapEIjrdHlo=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/CreateTask/CreateTask.js"],"names":["axios","Button","Modal","useState","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","marginTop","transform","CreateTask","today","Date","date","getFullYear","getMonth","getDate","task","setTask","typeID","taskerID","workerID","dateCompleted","rating","title","offeredPrice","description","statusID","negotiable","img","remotePossible","modalIsOpen","setModalIsOpen","setModalIsOpenToTrue","setModalIsOpenToFalse","handleSubmit","e","preventDefault","post","then","response","console","log","data","error","target","value","width","height","float","margin"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport Modal from 'react-modal';\nimport { useState } from 'react'\n\nconst customStyles = {\n    overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(56, 56, 56, 0.95)'\n    },\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      marginTop: '2%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n    }\n};\n\nfunction CreateTask (){\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    const [task, setTask] = useState({\n        typeID: 1, // temp\n        taskerID: 1, // temp\n        workerID: 1, // temp\n        dateCompleted: \"\", // temp\n        rating: 0, // temp\n\n        title: \"\",\n        offeredPrice: 0,\n        description: \"\",\n        statusID: 1,\n        \n        negotiable: 0,\n        \n        img: \"\",\n        remotePossible: 0,\n    });\n    \n     // Create Task Modal\n     const [modalIsOpen, setModalIsOpen] = useState(false);\n\n     const setModalIsOpenToTrue =()=>{ setModalIsOpen(true); }\n     const setModalIsOpenToFalse =()=>{ setModalIsOpen(false); }\n\n    const handleSubmit = e => { \n        e.preventDefault();\n        setModalIsOpenToFalse();\n        \n        axios.post('http://localhost:3200/task', { task })\n            .then((response) => { \n                console.log(response.data);\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n   \n\n    return(\n        <>\n            <Button variant=\"contained\" color=\"inherit\" onClick={setModalIsOpenToTrue}>Create Task</Button>\n            <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={()=> setModalIsOpenToFalse} scrollable={true}>\n                <center>\n                    <h5>Create a Task</h5>\n                </center>\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <label>\n                            Task name: \n                            <input type=\"text\" name=\"task_name\" value={task.title} onChange={e => setTask({ ...task, title: e.target.value })}/>\n                        </label>\n                        <label>\n                            Price:\n                            <input type=\"number\" name=\"task_price\" placeholder=\"USD\" value={task.offeredPrice} onChange={e => setTask({ ...task, offeredPrice: e.target.value })}/>\n                        </label>\n                        <label>\n                            Description: \n                            <br/>\n                            <textarea id=\"task_desc\" maxLength=\"1200\" style={{width:\"100%\", height:\"150px\"}} placeholder={\"I will\"}\n                                value={task.description} onChange={e => setTask({ ...task, description: e.target.value })}/>\n                        </label>\n                        <label>\n                            Location: \n                            <input type=\"text\" name=\"task_loc\"/>\n                        </label>\n                        <label>\n                            Deadline: \n                            <input type=\"date\" name=\"task_deadline\" value={task.dateCompleted} onChange={e => setTask({ ...task, dateCompleted: e.target.value })}/>\n                        </label>\n                        <label>\n                            Image:\n                            <br/>\n                            <input type=\"file\" name=\"task_img\" accept=\"image/*\"></input>\n                        </label>\n                        <Button type=\"submit\" variant=\"contained\" color='inherit' style={{float:\"right\", margin:\"1% 1% 1% 1%\"}}>Submit</Button>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={setModalIsOpenToFalse} style={{float:\"right\", margin:\"1% 1% 1% 1%\"}}>Cancel</Button>\n                    </form>\n                </div>\n            </Modal>\n        </>\n    )\n}\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}