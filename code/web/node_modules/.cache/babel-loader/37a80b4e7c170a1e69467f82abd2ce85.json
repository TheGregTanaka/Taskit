{"ast":null,"code":"var _jsxFileName = \"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport bcrypt from 'bcrypt';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nasync function loginUser(credentials) {\n  //TODO put api in env var\n  const api = \"http://localhost:3200\";\n\n  const bcrypt = require('bcrypt');\n\n  const saltRounds = 10;\n  bcrypt.genSalt(saltRounds, function (err, salt) {\n    bcrypt.hash(credentials.password, salt, function (err, hash) {\n      axios.post(api + '/login', {\n        email: credentials.email,\n        password: hash\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    });\n  });\n  let json = {\n    \"token\": \"aoeuhjkl\"\n  };\n  return json;\n}\n\nexport default function Login({\n  setToken,\n  loggedIn\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      style: {\n        backgroundColor: \"white\",\n        marginCenter: '3%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          children: \" Sign In with your TaskIT Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\"\n            /*className={classes.submit}*/\n            ,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"#ffffff\",\n              children: \"SUBMIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this);\n  }\n}\n\n_s(Login, \"3NMtzTMUd3hPT8StVN3/o+vmXm8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/Login/Login.js"],"names":["React","useState","PropTypes","Redirect","Typography","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Avatar","makeStyles","Container","axios","bcrypt","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","loginUser","credentials","api","require","saltRounds","genSalt","err","salt","hash","password","post","email","then","res","console","log","catch","json","Login","setToken","loggedIn","username","setUserName","setPassword","classes","handleSubmit","e","preventDefault","token","marginCenter","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport bcrypt from 'bcrypt';\n\nimport './Login.css';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nasync function loginUser(credentials) {\n  //TODO put api in env var\n  const api = \"http://localhost:3200\";\n  const bcrypt = require('bcrypt');\n  const saltRounds = 10;\n  bcrypt.genSalt(saltRounds, function(err, salt) {\n    bcrypt.hash(credentials.password, salt, function(err, hash) {\n      axios.post(api + '/login', {\n        email: credentials.email,\n        password: hash\n      })\n      .then(function (res) {\n        console.log(res);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n      \n    });\n  });\n  let json = {\n    \"token\": \"aoeuhjkl\"\n  };\n  return json;\n}\n\nexport default function Login({ setToken, loggedIn }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const classes = useStyles();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({ username, password });\n    setToken(token);\n  }\n  if (loggedIn) {\n    return (<Redirect to=\"/dashboard\" />);\n  } else {\n    return (\n<Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor: \"white\", marginCenter:'3%'}} >\n<CssBaseline />\n<div className={classes.paper}>\n<Typography variant=\"h5\" color=\"textPrimary\"> Sign In with your TaskIT Credentials</Typography>\n  <form className={classes.form} noValidate onSubmit={handleSubmit}>\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n      </Grid>\n    </Grid>\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      /*className={classes.submit}*/\n    >\n    <Typography color='#ffffff'>SUBMIT</Typography>\n    </Button>\n    <Grid container justify=\"flex-end\">\n      <Grid item>\n      </Grid>\n    </Grid>\n  </form>\n</div>\n<Box mt={5}>\n</Box>\n</Container>\n);  \n  }\n}\n\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}