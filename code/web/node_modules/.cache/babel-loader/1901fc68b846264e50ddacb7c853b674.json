{"ast":null,"code":"var _jsxFileName = \"/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nasync function loginUser(credentials) {\n  //TODO put api in env var\n  const api = \"localhost:3200\";\n  console.log('ayy');\n  axios.post(api + '/login', {\n    email: credentials.email,\n    password: credentials.password\n  }).then(function (res) {\n    console.log(res);\n  }).catch(function (err) {\n    console.log(err);\n  });\n  let json = {\n    \"token\": \"aoeuhjkl\"\n  };\n  return json;\n}\n\nexport default function Login({\n  setToken,\n  loggedIn\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  } else {\n    return (\n      /*#__PURE__*/\n\n      /* <div className=\"container\">\n         <div className=\"row\">\n           <div className=\"col\">\n             <h1>Sign in with you <b>TaskIt</b> account</h1>\n           </div>\n           <div className=\"col\">\n             <div className=\"login-wrapper\">\n                 <header>Login</header>\n                 <form onSubmit={handleSubmit}>\n                   <label>\n                     <p>Email</p>\n                   <input type=\"text\" \n                     placeholder=\"Email\" \n                     onChange={e => setUserName(e.target.value)}/>\n                   </label>\n                   <label>\n                     <p>Password</p>\n                   <input type=\"password\" \n                     placeholder=\"Password\"\n                     onChange={e => setPassword(e.target.value)}/>\n                   </label>\n                   <div>\n                     <button type=\"submit\">Submit</button>\n                   </div>\n                 </form>\n               </div>\n           </div>\n         </div>\n       </div>\n      */\n      _jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        style: {\n          backgroundColor: \"white\",\n          marginCenter: '3%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"textPrimary\",\n            children: \" Sign In with your TaskIT Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"current-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\"\n              /*className={classes.submit}*/\n              ,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"#ffffff\",\n                children: \"SUBMIT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }, this)\n    );\n  }\n}\n\n_s(Login, \"3NMtzTMUd3hPT8StVN3/o+vmXm8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/gtanaka/OneDrive/college/2020-2021spring/csci3308/group/taskit/code/src/components/Login/Login.js"],"names":["React","useState","PropTypes","Redirect","Typography","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Avatar","makeStyles","Container","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","loginUser","credentials","api","console","log","post","email","password","then","res","catch","err","json","Login","setToken","loggedIn","username","setUserName","setPassword","classes","handleSubmit","e","preventDefault","token","marginCenter","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\n/*import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';*/\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nimport './Login.css';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nasync function loginUser(credentials) {\n  //TODO put api in env var\n  const api = \"localhost:3200\";\n  console.log('ayy');\n  axios.post(api + '/login', {\n    email: credentials.email,\n    password: credentials.password\n  })\n  .then(function (res) {\n    console.log(res);\n  })\n  .catch(function (err) {\n    console.log(err);\n  });\n  \n  let json = {\n    \"token\": \"aoeuhjkl\"\n  };\n  return json;\n}\n\nexport default function Login({ setToken, loggedIn }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const classes = useStyles();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({ username, password });\n    setToken(token);\n  }\n  if (loggedIn) {\n    return (<Redirect to=\"/dashboard\" />);\n  } else {\n    return (\n     /* <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>Sign in with you <b>TaskIt</b> account</h1>\n          </div>\n          <div className=\"col\">\n            <div className=\"login-wrapper\">\n                <header>Login</header>\n                <form onSubmit={handleSubmit}>\n                  <label>\n                    <p>Email</p>\n                  <input type=\"text\" \n                    placeholder=\"Email\" \n                    onChange={e => setUserName(e.target.value)}/>\n                  </label>\n                  <label>\n                    <p>Password</p>\n                  <input type=\"password\" \n                    placeholder=\"Password\"\n                    onChange={e => setPassword(e.target.value)}/>\n                  </label>\n                  <div>\n                    <button type=\"submit\">Submit</button>\n                  </div>\n                </form>\n              </div>\n          </div>\n        </div>\n      </div>\n*/\n<Container component=\"main\" maxWidth=\"xs\" style={{backgroundColor: \"white\", marginCenter:'3%'}} >\n<CssBaseline />\n<div className={classes.paper}>\n<Typography variant=\"h5\" color=\"textPrimary\"> Sign In with your TaskIT Credentials</Typography>\n{/*<Avatar alt=\"TaskIT\" src=\"/Users/ManojYeddanapudy/sign_up/Taskit.jpg\" className={classes.large} />*/}\n  <form className={classes.form} noValidate >\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n      </Grid>\n    </Grid>\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      /*className={classes.submit}*/\n    >\n    <Typography color='#ffffff'>SUBMIT</Typography>\n    </Button>\n    <Grid container justify=\"flex-end\">\n      <Grid item>\n      </Grid>\n    </Grid>\n  </form>\n</div>\n<Box mt={5}>\n</Box>\n</Container>\n);  \n  }\n}\n\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}